generator client {
  provider = "prisma-client-js"
}
 
datasource db {
  provider = "mysql"
  url      = "mysql://root:root@localhost:3306/test"
}

//Creating models, to migrate run: npx prisma migrate dev 

model PlayerStatistics {
  id          Int      @id @default(autoincrement())
  rate Float @default(0)
  matchesNumber Int @default(0)
  favoritePosition String
  player Player @relation(fields: [playerId], references: [id])
  playerId Int @unique

  createdAt   DateTime @default(now())
}

model Player {
  id          Int      @id @default(autoincrement())
  username    String
  password    String
  fullName    String
  location    String
  isVerified Boolean @default(false)
  verificationToken String
  resetToken String
  resetExpiration DateTime @default(now())
  description String?  @default("")
  playerStatistics PlayerStatistics?
  playerStatisticsId Int
  groups      GroupToPlayer[]
  createdMatches Match[]
  matchToPlayers MatchToPlayer[]
  messages Message[]
  createdAt   DateTime @default(now())
}

model Match {
  id          Int      @id @default(autoincrement())
  location String 
  time        DateTime
  playersNumber Int
  prize String //the prize is not always money so it's a String
  duration Float //In hours for exmp 1.5h
  creator Player @relation(fields: [creatorId], references: [id])
  creatorId Int
  players     MatchToPlayer[]

  createdAt   DateTime @default(now())
}

model MatchToPlayer {
  id          Int      @id @default(autoincrement())
  rate        Float
  position    String
  player      Player   @relation(fields: [playerId], references: [id])
  playerId    Int
  match       Match    @relation(fields: [matchId], references: [id])
  matchId     Int
  @@unique([playerId, matchId])

  createdAt   DateTime @default(now())
}

model Group {
  id          Int      @id @default(autoincrement())
  name        String
  players     GroupToPlayer[]
  messages    Message[]

  createdAt   DateTime @default(now())
}

model GroupToPlayer {
  id          Int      @id @default(autoincrement())
  player      Player   @relation(fields: [playerId], references: [id])
  playerId    Int
  group       Group    @relation(fields: [groupId], references: [id])
  groupId     Int
  @@unique([playerId, groupId])

  createdAt   DateTime @default(now())
}

model Message{
  id          Int      @id @default(autoincrement())
  message String
  group       Group    @relation(fields: [groupId], references: [id])
  groupId     Int
  sender      Player   @relation(fields: [senderId], references: [id])
  senderId    Int
  isRead      Boolean @default(false)
  createdAt   DateTime @default(now())
}




















